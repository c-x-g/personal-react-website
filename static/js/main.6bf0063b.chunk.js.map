{"version":3,"sources":["AboutMe/AboutMe.js","resume/Carl_Guan_CV.pdf","PersonalLinks/PersonalLinks.js","App.js","reportWebVitals.js","index.js"],"names":["Paragraph","styled","p","aboutMe","IconWrapper","div","IconNameWrapper","props","color","hover","ButtonsWrapper","personalLinks","personalLinksComponent","name","iconName","Gmail","hoverColor","href","DocumentBulletList","resume","Linkedin","Github","map","e","StyledIcon","target","rel","createIcon","App","className","AboutMe","PersonalLinks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAIMA,EAAYC,IAAOC,EAAV,2FAeAC,EATC,WACd,OACE,eAACH,EAAD,kDAEE,2B,gCCdS,MAA0B,yCCMnCI,EAAcH,IAAOI,IAAV,oGAOXC,EAAkBL,IAAOC,EAAV,uQAKV,SAACK,GAAD,OAAWA,EAAMC,SAKxB,SAACD,GAAD,OAAWA,EAAME,SAKfC,EAAiBT,IAAOI,IAAV,iEAwELM,EA9CO,WACpB,IAsCMC,EAtCmB,CACvB,CACEC,KAAM,QACNC,SAAUC,IACVP,MAAO,UACPQ,WAAY,UACZC,KAAM,8BAER,CACEJ,KAAM,eACNC,SAAUI,IACVV,MAAO,UACPQ,WAAY,OACZC,KAAME,GASR,CACEN,KAAM,WACNC,SAAUM,IACVZ,MAAO,UACPQ,WAAY,OACZC,KAAM,mDAER,CACEJ,KAAM,SACNC,SAAUO,IACVb,MAAO,UACPQ,WAAY,UACZC,KAAM,6BAIsCK,KAAI,SAACC,GACnD,OA7De,SAAC,GAAiD,IAA/CV,EAA8C,EAA9CA,KAAMI,EAAwC,EAAxCA,KAAMH,EAAkC,EAAlCA,SAAUN,EAAwB,EAAxBA,MAAOQ,EAAiB,EAAjBA,WAC3CQ,EAAavB,YAAOa,EAAPb,CAAH,kIAGLO,EAEEQ,GAGb,OACE,cAACZ,EAAD,UACE,oBAAGa,KAAMA,EAAMQ,OAAO,SAASC,IAAI,aAAnC,UACE,cAACF,EAAD,IACA,cAAClB,EAAD,CAAiBG,MAAOL,EAAaI,MAAOA,EAA5C,SACGK,SA+CAc,CAAWJ,MAGpB,OAAO,cAACb,EAAD,UAAiBE,KC/EXgB,MAbf,WACE,OACE,8BACE,+BACE,0BAASC,UAAU,QAAnB,UACE,cAACC,EAAD,IACA,cAACC,EAAD,YCCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6bf0063b.chunk.js","sourcesContent":["import '../css/style.css'\nimport '../css/queries.css'\nimport styled from 'styled-components'\n\nconst Paragraph = styled.p`\n  line-height: 160%;\n  font-weight: 400;\n  font-size: 35px;\n`\n\nconst aboutMe = () => {\n  return (\n    <Paragraph>\n      Hello! I&#39;m Carl&#44; a software engineer\n      <br />\n    </Paragraph>\n  )\n}\n\nexport default aboutMe\n","export default __webpack_public_path__ + \"static/media/Carl_Guan_CV.b9549e2b.pdf\";","import styled from 'styled-components'\nimport { Linkedin } from '@styled-icons/bootstrap'\nimport { Gmail, Leetcode, Github } from '@styled-icons/simple-icons'\nimport { DocumentBulletList } from '@styled-icons/fluentui-system-filled'\nimport resume from '../resume/Carl_Guan_CV.pdf'\n\nconst IconWrapper = styled.div`\n  display: inline;\n  width: 5%;\n  padding: 0;\n  margin-right: 60px;\n`\n\nconst IconNameWrapper = styled.p`\n  visibility: hidden;\n  padding: 0;\n  margin: 0;\n  text-align: left;\n  color: ${(props) => props.color};\n  font: Source Code Pro;\n  font-size: 25px;\n  font-weight: bold;\n  text-decoration: underline;\n  ${(props) => props.hover}:hover & {\n    visibility: visible;\n  }\n`\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  margin-top: 7%;\n`\n\nconst createIcon = ({ name, href, iconName, color, hoverColor }) => {\n  const StyledIcon = styled(iconName)`\n    margin-bottom: 20px;\n    padding: 0;\n    color: ${color};\n    &:hover {\n      color: ${hoverColor};\n    }\n  `\n  return (\n    <IconWrapper>\n      <a href={href} target=\"_blank\" rel=\"noreferrer\">\n        <StyledIcon />\n        <IconNameWrapper hover={IconWrapper} color={color}>\n          {name}\n        </IconNameWrapper>\n      </a>\n    </IconWrapper>\n  )\n}\n\nconst personalLinks = () => {\n  const personalLinkObjs = [\n    {\n      name: 'gmail',\n      iconName: Gmail,\n      color: '#D14836',\n      hoverColor: '#4285F4',\n      href: 'mailto:carlxguan@gmail.com',\n    },\n    {\n      name: 'résumé',\n      iconName: DocumentBulletList,\n      color: '#228B22',\n      hoverColor: '#000',\n      href: resume,\n    },\n    //    {\n    //      name: 'leetcode',\n    //      iconName: Leetcode,\n    //      color: '#F89F1B',\n    //      hoverColor: '#A0A0A0',\n    //      href: 'https://leetcode.com/c-x-g',\n    //    },\n    {\n      name: 'linkedin',\n      iconName: Linkedin,\n      color: '#0077b5',\n      hoverColor: 'teal',\n      href: 'https://www.linkedin.com/in/carl-guan-b073341a5',\n    },\n    {\n      name: 'github',\n      iconName: Github,\n      color: '#181717',\n      hoverColor: '#6cc644',\n      href: 'https://github.com/c-x-g',\n    },\n  ]\n\n  const personalLinksComponent = personalLinkObjs.map((e) => {\n    return createIcon(e)\n  })\n\n  return <ButtonsWrapper>{personalLinksComponent}</ButtonsWrapper>\n}\n\nexport default personalLinks\n","import './css/style.css'\nimport './css/queries.css'\nimport AboutMe from './AboutMe/AboutMe'\nimport PersonalLinks from './PersonalLinks/PersonalLinks'\n\nfunction App() {\n  return (\n    <div>\n      <body>\n        <section className=\"intro\">\n          <AboutMe></AboutMe>\n          <PersonalLinks></PersonalLinks>\n        </section>\n      </body>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}